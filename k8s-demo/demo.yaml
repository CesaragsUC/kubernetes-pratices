apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
spec:
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      tolerations:
      - key: "node-role.kubernetes.io-control-plane"
        operator: "Exists" #
        effect: "NoSchedule"
      containers:
      - name: api
        image: nivaldeir/api-produto:versao-test
        ports:
        - containerPort: 80
        resources: {}
        env:
          - name: Mongo__Host
            value: mongo-service
          - name: Mongo__User
            value: mongodbuser
          - name: Mongo__Password
            value: mongodbpwd
          - name: Mongo__Port
            value: "27017"
          - name: Mongo__DataBase
            value: admin
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  selector:
    app: api
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8080


# Mongo DB
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
spec:
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:4.2.8
        ports:
        - containerPort: 27017
        resources: {}
        env:
          - name: MONGO_INITDB_ROOT_USERNAME
            value: mongodbuser
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: mongodbpwd

---            

apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017
